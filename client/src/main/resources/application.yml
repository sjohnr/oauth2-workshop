spring:
  security:
    oauth2:
      client:
        registration:
          oidc-client:
            client-name: "Log In with Spring Authorization Server"
            client-id: "oidc-client"
            client-secret: "oidc"
            provider: "spring"
            scope:
              - "openid"
              - "profile"
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: "client_secret_basic"
            authorization-grant-type: "authorization_code"
          token-client:
            client-id: "token-client"
            client-secret: "token"
            provider: "spring"
            scope:
              - "cashcard:read"
              - "cashcard:write"
            client-authentication-method: "client_secret_basic"
            authorization-grant-type: "urn:ietf:params:oauth:grant-type:token-exchange"
        provider:
          spring:
            issuer-uri: "http://localhost:9000"
  cloud:
    gateway:
      routes:
        - id: cashcards
          uri: http://localhost:8091
          predicates:
            - Path=/cashcards/**
          filters:
            - TokenRelay=token-client
  sql:
    init:
      schema-locations:
        - "classpath:org/springframework/security/oauth2/client/oauth2-client-schema.sql"
      continue-on-error: true
      mode: always
  r2dbc:
    url: "r2dbc:mysql://localhost:3306/client_db?serverZoneId=America/Chicago"
    username: "spring"
    password: "spring"
